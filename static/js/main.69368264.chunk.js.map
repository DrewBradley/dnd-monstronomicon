{"version":3,"sources":["components/Display.js","actions/types.js","actions/actions.js","components/Monster.js","light-die.svg","components/Search.js","components/Filter.js","components/ShowAllMonsters.js","dragon.svg","dragonR.svg","components/Header.js","components/Encounter.js","components/App.js","components/Splash.js","reducers/EncounterReducer.js","reducers/Reducer.js","reducers/SearchReducer.js","reducers/index.js","store.js","localStorage.js","index.js"],"names":["Display","monsterLinks","className","FETCH_MONSTERS","FETCH_ONE_MONSTER","GET_MONSTERS_BY_CR","SEARCH_MONSTER_NAME","ADD_TO_ENCOUNTER","REMOVE_FROM_ENCOUNTER","searchMonster","monsterList","monsterName","dispatch","foundMonster","filter","monster","name","toLowerCase","includes","type","payload","Monster","state","clickHandler","bind","this","props","getOneMonster","location","url","addToEncounter","index","encounter","subtype","specialAbilities","special_abilities","map","ability","i","desc","proficiencies","proficiency","value","CI","condition_immunities","DI","damage_immunities","DR","damage_resistances","DV","damage_vulnerabilities","actions","action","legendary_actions","legendaryActions","legendary","special","onClick","alignment","xp","languages","size","challenge_rating","hit_dice","hit_points","armor_class","charisma","constitution","dexterity","intelligence","strength","wisdom","Component","connect","monsters","fetch","then","response","json","catch","error","console","log","monsterIndex","monsterUrl","Search","handleChange","handleClick","event","target","setState","preventDefault","clearInput","keyCode","btn","click","placeholder","onChange","onKeyDown","checkEnter","ref","node","src","dice","alt","Filter","CR","getMonstersByCR","opts","item","CRMonsters","results","ShowAllMonsters","Header","encounterCounter","length","Ldragon","to","Rdragon","Encounter","encounterMonster","pathname","removeFromEncounter","list","indexOf","App","getMonsters","exact","path","render","component","returned","initialState","rootReducer","combineReducers","serializedState","localStorage","getItem","JSON","parse","err","loadState","middleware","thunk","store","createStore","compose","applyMiddleware","subscribe","stringify","setItem","saveState","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.69368264.chunk.js","sourcesContent":["import React from 'react'\nimport './Display.css'\n\nconst Display = ({ monsterLinks }) => {\n    return (\n        <div className=\"monster-list\">\n            {monsterLinks}\n        </div>\n    )\n}\n\nexport default Display","export const FETCH_MONSTERS = \"FETCH_MONSTERS\"\n\nexport const FETCH_ONE_MONSTER = \"FETCH_ONE_MONSTER\"\n\nexport const GET_MONSTERS_BY_CR = \"GET_MONSTERS_BY_CR\"\n\nexport const SEARCH_MONSTER_NAME = \"SEARCH_MONSTER_NAME\"\n\nexport const ADD_TO_ENCOUNTER = \"ADD_TO_ENCOUNTER\"\n\nexport const REMOVE_FROM_ENCOUNTER = \"REMOVE_FROM_ENCOUNTER\"","/* eslint-disable array-callback-return */\nimport { FETCH_MONSTERS, FETCH_ONE_MONSTER, SEARCH_MONSTER_NAME, GET_MONSTERS_BY_CR, ADD_TO_ENCOUNTER, REMOVE_FROM_ENCOUNTER } from './types'\n\n\nexport const getMonsters = () => dispatch =>{\n  fetch('https://www.dnd5eapi.co/api/monsters')\n    .then(response => response.json())\n    .then(monsters => dispatch({\n      type: FETCH_MONSTERS,\n      payload: monsters.results\n    }))\n    .catch(error => console.log(error))\n}\n\nexport const getOneMonster = (url) => dispatch => {\n  fetch(`https://www.dnd5eapi.co${url}`)\n      .then(response => response.json())\n      .then(monster => dispatch({\n        type: FETCH_ONE_MONSTER,\n        payload: monster\n    }))\n  .catch(error => console.log(error))\n}\n\nexport const getMonstersByCR = (CR) => dispatch => {\n  fetch(`https://www.dnd5eapi.co/api/monsters?challenge_rating=${CR}`)\n  .then(response => response.json())\n  .then(CRMonsters => dispatch({\n    type: GET_MONSTERS_BY_CR,\n    payload: CRMonsters.results\n  }))\n  .catch(error => console.log(error))\n}\n\nexport const searchMonster = (monsterList, monsterName) => dispatch => {\n  if(!monsterName) {\n      dispatch({\n        type: SEARCH_MONSTER_NAME,\n        payload: monsterList\n    })\n  } else {\n  const foundMonster = monsterList.filter(monster => {\n    if (monster.name.toLowerCase().includes(monsterName)){\n      return monster.name\n    }\n  })\n  dispatch({\n        type: SEARCH_MONSTER_NAME,\n        payload: foundMonster\n    })\n}}\n\nexport const addToEncounter = (monsterName, monsterIndex, monsterUrl, encounter) => dispatch => {\n  encounter = [...encounter, {monsterName, monsterIndex, monsterUrl}]\n  dispatch({\n    type: ADD_TO_ENCOUNTER,\n    payload: encounter\n  })\n}\n\nexport const removeFromEncounter = (index, list) => dispatch => {\n  const encounter = list.filter(monster => {\n    return list.indexOf(monster) !== index\n  })\n  dispatch({\n    type: REMOVE_FROM_ENCOUNTER,\n    payload: encounter\n  })\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getOneMonster, addToEncounter } from '../actions/actions'\nimport PropTypes from 'prop-types';\nimport './Monster.css'\n\nclass Monster extends Component {\n    constructor() {\n        super()\n        this.state = {}\n    this.clickHandler = this.clickHandler.bind(this)\n    }\n\n    componentDidMount() {\n        this.props.getOneMonster(this.props.location.state.url)\n    }\n\n    clickHandler() {\n        this.props.addToEncounter(\n            this.props.monster.name, \n            this.props.monster.index,\n            this.props.location.state.url,\n            this.props.encounter\n        )\n    }\n\n    render() {\n        if (this.props.monster.url === this.props.location.state.url) {\n            const monster = this.props.monster\n            const subtype = monster.subtype ? \n                <div className=\"one-stat subtype\">SUBTYPE: <span>{monster.subtype}</span></div> : \n                <div className=\"one-stat subtype\">SUBTYPE: n/a</div>\n            \n            if (monster.specialAbilities) {\n                var specialAbilities = monster.special_abilities.map((ability, i) => {\n                    return (\n                        <div key={i}>\n                            <p className=\"stat-detail\">{ability.name}: {ability.desc}</p>\n                        </div>\n                    )\n                })\n            }\n            const proficiencies = monster.proficiencies.map((proficiency, i) => {\n                return (\n                    <div key={i}>\n                        <p className=\"stat-detail\">{proficiency.proficiency.name}: {proficiency.value}</p>\n                    </div>\n                )\n            })\n\n            const CI = monster.condition_immunities.map((CI, i) => {\n                return monster.condition_immunities ? \n                <div key={i}><p className=\"stat-detail\">{CI.name}</p></div> :\n                <div><p className=\"stat-detail\">CONDITION IMMUNITIES: n/a</p></div>\n            })\n            const DI = monster.damage_immunities.map((DI, i) => {\n                return monster.damage_immunities ? \n                <div key={i}><p className=\"stat-detail\">{DI}</p></div> :\n                <div><p className=\"stat-detail\">DAMAGE IMMUNITIES: n/a</p></div>\n            })\n            const DR = monster.damage_resistances.map((DR, i) => {\n                return monster.damage_resistances ? \n                <div key={i}><p className=\"stat-detail\">{DR}</p></div> :\n                <div><p className=\"stat-detail\">DAMAGE RESISTANCES: n/a</p></div>\n            })    \n            const DV = monster.damage_vulnerabilities.map((DV, i) => {\n                return monster.damage_vulnerabilities ? \n                <div key={i}><p className=\"stat-detail\">{DV}</p></div> :\n                <div><p className=\"stat-detail\">DAMAGE VULNERABILITIES: n/a</p></div>\n            })\n\n            if (monster.actions) {\n                var actions = monster.actions.map((action, i) => {\n                    return (\n                        <div key={i}>\n                            <div className=\"stat-detail\">{action.name}: {action.desc}</div>\n                        </div>\n                    )\n                })\n            }\n            if (monster.legendary_actions) {\n                var legendaryActions = monster.legendary_actions.map((action, i) => {\n                    return (\n                        <div key={i}>\n                            <div className=\"stat-detail\">{action.name}: {action.desc}</div>\n                        </div>\n                    )\n                })\n            }\n            const legendary = monster.legendary_actions ? \n                <div className=\"one-stat legendary-actions\">LEGENDARY ACTIONS: {legendaryActions}</div> :\n                <div className=\"one-stat legendary-actions\">LEGENDARY ACTIONS: n/a</div>\n\n            const special = monster.special_abilities ? \n                <div className=\"one-stat special-abilities\">SPECIAL ABILITIES: n/a</div> :\n                <div className=\"one-stat special-abilities\">SPECIAL ABILITIES: {specialAbilities}</div> \n\n            return (\n                <div className=\"monster-stats\">\n                    <button className=\"add-button\" onClick={this.clickHandler}>ADD TO ENCOUNTER</button>\n                    <br></br>\n                    <div className=\"name-box\">\n                        <p className=\"one-stat name\">NAME: <span>{monster.name}</span></p>\n                        <p className=\"one-stat type\">TYPE: <span>{monster.type}</span></p>\n                        {subtype}\n                        <p className=\"one-stat alignment\">ALIGNMENT: <span>{monster.alignment}</span></p>\n                        <p className=\"one-stat xp\">XP: <span>{monster.xp}</span></p>\n                        <p className=\"one-stat languages\">LANGUAGES: <span>{monster.languages}</span></p>\n                    </div>\n                    \n                    <div className=\"size-box\">\n                        <p className=\"one-stat size\">SIZE: <span>{monster.size}</span></p>\n                        <p className=\"one-stat challenge-rating\">CHALLENGE RATING: <span>{monster.challenge_rating}</span></p>\n                        <p className=\"one-stat hit-dice\">HIT DICE: <span>{monster.hit_dice}</span></p>\n                        <p className=\"one-stat hit-points\">HIT POINTS: <span>{monster.hit_points}</span></p>\n                        <p className=\"one-stat armor-class\">ARMOR CLASS: <span>{monster.armor_class}</span></p>\n                        <div className=\"one-stat proficiencies\">PROFICIENCIES: {proficiencies}</div>\n                    </div>\n\n                    <div className=\"modifier-box\">\n                        <p className=\"one-stat charisma\">CHARISMA: <span>{monster.charisma}</span></p>\n                        <p className=\"one-stat constitution\">CONSTITUTION: <span>{monster.constitution}</span></p>\n                        <p className=\"one-stat dexterity\">DEXTERITY: <span>{monster.dexterity}</span></p>\n                        <p className=\"one-stat intelligence\">INTELLIGENCE: <span>{monster.intelligence}</span></p>\n                        <p className=\"one-stat strength\">STRENGTH: <span>{monster.strength}</span></p>\n                        <p className=\"one-stat wisdom\">WISDOM: <span>{monster.wisdom}</span></p>\n                    </div>\n\n                    <div className=\"immunities-box\">\n                        <div className=\"one-stat damage-vulnerabilities\">DAMAGE VULNERABILITIES: {DV}</div>\n                        <div className=\"one-stat damage-resistances\">DAMAGE RESISTANCES: {DR}</div>\n                        <div className=\"one-stat condition-immunities\">CONDITION IMMUNITIES: {CI}</div>\n                        <div className=\"one-stat damage-immunities\">DAMAGE IMMUNITIES: {DI}</div>\n                    </div>\n                    \n                    <div className=\"one-stat actions\">ACTIONS: {actions}</div>\n                    <div className=\"legendary\"> {legendary}\n                    </div>\n                        {special}                   \n                    \n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nMonster.propTypes = {\n  getOneMonster: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  monster: PropTypes.object.isRequired,\n  encounter: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    monster: state.monsters.monster,\n    encounter: state.encounter.encounter\n})\n\nexport default connect(mapStateToProps, { getOneMonster, addToEncounter })(Monster)","export default __webpack_public_path__ + \"static/media/light-die.7412bdb4.svg\";","import React, { Component } from 'react'\nimport { searchMonster } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport dice from '../light-die.svg'\n\nclass Search extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsterName: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleChange(event) {\n    const {value} = event.target\n    this.setState({\n      monsterName: value\n    })\n  }\n\n  handleClick(event) {\n    event.preventDefault()\n    this.props.searchMonster(this.props.monsters, this.state.monsterName)\n    this.clearInput()\n  }\n\n  checkEnter(event) {\n    if (event.keyCode === 13) {\n      event.preventDefault()\n      this.btn.click()\n    }\n  }\n\n  clearInput() {\n    this.setState({\n      monsterName: \"\"\n    })\n  }\n  \n  render(){  \n    // searches the displayed list of monsters by name\n    return (\n      <div className=\"nav-button\">\n        <div className=\"search-field1\">\n          <form className=\"search-field\">\n            <input \n              type=\"text\"\n              placeholder=\"Search by name\"\n              name=\"search\"\n              className=\"search-input\"\n              value={this.state.monsterName}\n              onChange={this.handleChange}\n              onKeyDown={(event) => this.checkEnter(event)}\n            ></input>\n            <button \n              className=\"search-btn\"\n              ref={node => (this.btn = node)}\n              onClick={(event) => this.handleClick(event)}\n            ><img className=\"dice\" src={ dice } alt=\"a d20\"/></button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nSearch.propTypes = {\n  searchMonster: PropTypes.func,\n  monsters: PropTypes.array\n}\n\nconst mapStateToProps = (state) => ({\n  monsters: state.monsters.monsters\n})\n\nexport default connect(mapStateToProps, { searchMonster })(Search);","import React, { Component } from 'react'\nimport { getMonstersByCR } from '../actions/actions'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport dice from '../light-die.svg'\n\nclass Filter extends Component {\n    constructor() {\n        super()\n        this.state = {\n            CR: 0\n        }\n        this.handleClick = this.handleClick.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    \n    handleChange(event) {\n        this.setState({ CR: event.target.value })\n    }\n\n    handleClick(event) {\n        event.preventDefault()\n        this.props.getMonstersByCR(this.state.CR)\n        this.clearInput()\n    }\n    \n    clearInput() {\n        this.setState({\n            CR: ''\n        })\n    }\n    \n    render() {\n        const CRList = [0, .125, .25, .5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30]\n        var opts = CRList.map((item, index) => {\n            return (\n                <option value={item} key={item}>{item}</option>\n                )\n            })\n\n        return (\n            <div className=\"nav-button\">\n                <form className=\"filter-form\" onChange={this.handleChange}>\n                <label className=\"filter-label\">Challenge Rating</label>\n                    <select className=\"filter-select\">\n                        {opts}\n                    </select>\n                    <button className=\"filter-button\" onClick={this.handleClick}><img className=\"dice\" src={ dice } alt=\"a d20\"/></button>\n                </form>\n            </div>\n        )\n    }\n}\n\nFilter.propTypes = {\n  getMonstersByCR: PropTypes.func\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nexport default connect(mapStateToProps, { getMonstersByCR })(Filter)","import React, { Component } from 'react'\nimport { searchMonster } from '../actions/actions'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nclass ShowAllMonsters extends Component {\nconstructor() {\n        super()\n        this.state = {}\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n      this.props.searchMonster(this.props.monsters, '')\n    }\n\n  render(){\n    return(\n      <div className=\"nav-button\">\n        <button \n          className=\"show-all-btn\"\n          onClick={this.handleClick}>\n          Show All Monsters\n        </button>\n      </div>\n    )\n  }\n}\n\nShowAllMonsters.propTypes = {\n  searchMonster: PropTypes.func,\n  monsters: PropTypes.array,\n}\n\nconst mapStateToProps = (state) => ({\n  monsters: state.monsters.monsters\n})\n\nexport default connect(mapStateToProps, { searchMonster })(ShowAllMonsters);","export default __webpack_public_path__ + \"static/media/dragon.597395b0.svg\";","export default __webpack_public_path__ + \"static/media/dragonR.a9079756.svg\";","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Search from './Search'\nimport Filter from './Filter'\nimport ShowAllMonsters from './ShowAllMonsters'\nimport './Header.css'\nimport Ldragon from '../dragon.svg'\nimport Rdragon from '../dragonR.svg'\n\n\nclass Header extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  render() {\n    const encounterCounter = this.props.encounter.length\n\n    return (\n      <header className=\"header\">\n            <div className=\"title\">\n              <img className=\"dragon\" src={ Ldragon } alt=\"a dragon\"/>\n              <Link to=\"/home\" className=\"app-name\"><h1>MONSTRONOMICON</h1></Link>\n              <img className=\"dragon\" src={ Rdragon } alt=\"a dragon\"/>\n            </div>\n            <div className=\"nav\">\n              <Search />\n              <ShowAllMonsters />\n              <Filter />\n              <div className=\"nav-button\">\n                <Link to=\"/encounter\" className=\"encounter-button\">Encounter ({encounterCounter})</Link>\n              </div>\n            </div>\n        </header>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  encounter: state.encounter.encounter\n})\n\nexport default connect(mapStateToProps, {})(Header);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Encounter.css'\nimport PropTypes from 'prop-types';\nimport { removeFromEncounter } from '../actions/actions'\n\nclass Encounter extends Component {\n  render() {\n    if(!this.props.encounter.length) {\n      return (\n        <h2>\n          You have no monsters in your encounter.\n        </h2>\n      )\n    } else {  \n      const encounterMonster = this.props.encounter.map((monster, i) => {\n        return (\n          <div key={i} className=\"encounter-element\">\n          <Link to={{\n            pathname: `/monster/${monster.monsterIndex}`,\n            state: {url: monster.monsterUrl}\n          }}>\n            <div className=\"encounter-tag\">\n              {monster.monsterName} \n            </div>\n          </Link>\n          <button className=\"delete-button\" onClick={() => this.props.removeFromEncounter(i, this.props.encounter)}>X<span className=\"delete-tooltip\">⬅ remove monster</span></button>\n        </div>\n      )\n    })\n    return (\n      <div className=\"encounter-list\">\n          { encounterMonster }\n      </div>\n    )\n  }\n}\n\n}\n\nEncounter.propTypes = {\n  removeFromEncounter: PropTypes.func,\n  encounter: PropTypes.array,\n}\n\nconst mapStateToProps = (state) => ({\n  monsters: state.monsters.monsters,\n  encounter: state.encounter.encounter\n})\n\nexport default connect(mapStateToProps, { removeFromEncounter })(Encounter);\n","import React, { Component } from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\nimport Display from './Display'\nimport Monster from './Monster'\nimport Header from './Header'\nimport Encounter from './Encounter'\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport { getMonsters } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Splash from './Splash'\n\nclass App extends Component {\n  \n  componentDidMount() {\n    this.props.getMonsters()\n  }\n  \n  render() {\n    // if monsters is in state and there's no search term\n    if (this.props.monsters.length && !this.props.results.length) {\n      var monsterLinks = this.props.monsters.map(monster => {\n        return  (\n          <div key={monster.index}>\n            <Link to={{\n              pathname: `/monster/${monster.index}`,\n              state: {url: monster.url}\n            }}>\n              <div className=\"monster-tag\">\n                {monster.name}\n              </div>\n            </Link>\n          </div>\n      )\n    })\n    // if there is a search term\n    } else if (this.props.results.length) {\n      monsterLinks = this.props.results.map(monster => {\n        return  (\n          <div key={monster.index}>\n            <Link to={{\n              pathname: `/monster/${monster.index}`,\n              state: {url: monster.url}\n            }}>\n              <div className=\"monster-tag\">\n                {monster.name}\n              </div>\n            </Link>\n          </div>\n        )\n      })\n   \n    } else {\n      return null\n    }\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          {/* <Route exact path=\"/\" component={Splash}/> */}\n          <Route exact path=\"/\" >\n            <Redirect to=\"/home\"/>\n          </Route>\n          <Route exact path=\"/home\" render = {() => <Display monsterLinks={monsterLinks}/>}/>\n          <Route path=\"/encounter\" component={Encounter} />\n          <Route path=\"/monster/\" component={Monster} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  getMonsters: PropTypes.func,\n  monsters: PropTypes.array,\n  results: PropTypes.array,\n}\n\nconst mapStateToProps = (state) => ({\n  monsters: state.monsters.monsters,\n  results: state.returned.returned\n})\n\nexport default connect(mapStateToProps, { getMonsters })(App);\n","import React, { Component } from 'react'\nimport './Splash.css'\nimport {Link} from 'react-router-dom'\n\nclass Splash extends Component {\n  render() {\n     return (\n        <div className=\"splash\">\n            <h1>Welcome to</h1>\n            <h1 className=\"splash-title\">MONSTRONOMICON</h1>\n            <Link to=\"/home\" >\n              <p className=\"go-home\">\n                Enter\n              </p>\n            </Link>\n        </div>\n    )\n  } \n}\n\nexport default Splash","import { ADD_TO_ENCOUNTER, REMOVE_FROM_ENCOUNTER } from '../actions/types'\n\nconst initialState = { \n  monsters: [],\n  monster: {},\n  returned: [],\n  encounter: []\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch(action.type) {\n    case ADD_TO_ENCOUNTER:\n      return {...state, encounter: action.payload}\n    case REMOVE_FROM_ENCOUNTER:\n      return {...state, encounter: action.payload}\n    default:\n      return state\n  }\n}","import { FETCH_MONSTERS, FETCH_ONE_MONSTER } from '../actions/types'\n\nconst initialState = { \n  monsters: [],\n  monster: {},\n  returned: [],\n  encounter: []\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case FETCH_MONSTERS:\n      return {...state, monsters: action.payload}\n    case FETCH_ONE_MONSTER:\n      return {...state, monster: action.payload}\n    default:\n      return state\n  }\n}","import { SEARCH_MONSTER_NAME, GET_MONSTERS_BY_CR } from '../actions/types'\n\nconst initialState = { \n  monsters: [],\n  monster: {},\n  returned: [],\n  encounter: []\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SEARCH_MONSTER_NAME:\n      return {...state, returned: action.payload}\n    case GET_MONSTERS_BY_CR:\n      return {...state, returned: action.payload}\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\nimport EncounterReducer from './EncounterReducer';\nimport monsterReducer from './Reducer'\nimport searchReducer from './SearchReducer'\n\nconst rootReducer = combineReducers({\n  monsters: monsterReducer,\n  returned: searchReducer,\n  encounter: EncounterReducer\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport { loadState, saveState } from './localStorage';\nimport rootReducer from './reducers'\n\nconst initialState = loadState() || {} \n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initialState, compose(\n    applyMiddleware(...middleware)\n    ))\n\nstore.subscribe(() => {\n  saveState({\n    encounter: store.getState().encounter\n  })\n})\n\nexport default store","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    \n    if (serializedState === null){\n      return undefined\n    }\n\n    return JSON.parse(serializedState)\n\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (err) {\n    console.log(err)\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './components/App';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}